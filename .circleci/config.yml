version: 2.1
workflows:
  version: 2
  build_and_publish:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
jobs:
  build:
    machine:
      image: default
    steps:
      - checkout
      - run:
          name: Install python versions
          command: |
            git clone https://github.com/pyenv/pyenv-update.git $(pyenv root)/plugins/pyenv-update
            pyenv update
            pyenv install 3.6.15 
            pyenv install 3.7.17
            pyenv install 3.8.20 
            pyenv install 3.9.20 
            pyenv install 3.10.15
            pyenv install 3.11.10
            pyenv install 3.12.6
            pyenv local 3.6.15 3.7.17 3.8.20 3.9.20 3.10.15 3.11.10 3.12.6
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "dev-requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pip
            pip install -r dev-requirements.txt
      - save_cache:
          paths:
            - venv
          key: v2-dependencies-{{ checksum "dev-requirements.txt" }}
      - run:
          name: Lint code
          command: |
            . venv/bin/activate
            flake8
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            tox
  publish:
    machine:
      image: default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            git clone https://github.com/pyenv/pyenv-update.git $(pyenv root)/plugins/pyenv-update
            pyenv update
            pyenv install 3.8.13
            pyenv local 3.8.13
            python3 -m venv venv
            . venv/bin/activate
            pip install sdist wheel twine
      - run:
          name: Verify version matches git tag
          command: |
            . venv/bin/activate
            python setup.py verify
      - run:
          name: Build package
          command: |
            . venv/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: Upload to PyPI
          command: |
            echo $'[distutils]\nindex-servers = pypi\n[pypi]' > ~/.pypirc
            echo "username = __token__" >> ~/.pypirc
            echo "password = $PYPI_API_TOKEN" >> ~/.pypirc
            . venv/bin/activate
            twine upload dist/*
